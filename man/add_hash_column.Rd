% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/13-add_hash_column.R
\name{add_hash_column}
\alias{add_hash_column}
\title{add_hash_column}
\usage{
add_hash_column(DT_frame, hash_colname = "hash",
  colnames_for_hash = colnames(DT_frame), excluded_colnames = c(),
  unite = TRUE, cores = 1L, sort_colnames_for_hash = TRUE)
}
\arguments{
\item{DT_frame}{data.table. Ramka, do której dodana zostanie kolumna `hash`.}

\item{hash_colname}{nazwa kolumny z tworzonym hashem}

\item{colnames_for_hash}{character vector. Wektor z nazwami kolumn,
które będą brane dodatkowo przy wyliczaniu hasha.}

\item{excluded_colnames}{character vector. Nazwy kolumn, które NIE zostaną wzięte
do wyliczania kolumny `hash`.}

\item{unite}{logical; jeśli TRUE, to najpierw tworzy nowa kolumnę przy pomocy 'tidyr::unite_' i dopiero na niej tworzy hash; przy większych ramkach danych ma to znaczenie, bo jeśli TRUE, to działa dużo szybciej}

\item{cores}{integer; ile corów ma być używanych przy tworzeniu hash'a (działa tylko kiedy unite = TRUE); domyślnie 1}

\item{sort_colnames_for_hash}{logical; jeśli TRUE, to sortuje wektor z kolumnami}
}
\value{
data.table
}
\description{
Funkcja dodająca kolumnę hashem (więcej informacji o sposobie tworzenia hasha: \link[digest]{digest}). Hash wyliczany jest na podstawie wartości w polach (kolumnach) wyspecyfikowanych w argumencie `colnames_for_hash` (domyślnie są to wszystkie kolumny w `DT_frame`). Funkcja może mieć zastosowanie przy tworzeniu Primary Key w tabeli, która ma trafić na bazę MySQL
}
\examples{
data <- data.table(a = c("X", "y", "Z"), b = c("a", "a", "Aa"), c = c("q", "w", "e"))
dt_hash <- add_hash_column(data, colnames_for_hash = c("a", "b"),
                           excluded_colnames = c(), unite = TRUE, cores = 1L,
                           sort_colnames_for_hash = TRUE)
}
